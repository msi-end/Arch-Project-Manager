<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Expense Analytics</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .trigger-btn {
            background: linear-gradient(45deg, #ff6b35, #f7931e);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            box-shadow: 0 8px 25px rgba(255, 107, 53, 0.3);
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .trigger-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 35px rgba(255, 107, 53, 0.4);
        }

        .popup-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(10px);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            animation: fadeIn 0.3s ease;
        }

        .popup-overlay.active {
            display: flex;
        }

        .popup {
            background: white;
            border-radius: 20px;
            width: 95%;
            max-width: 1200px;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
            transform: translateY(-100px);
            opacity: 0;
            animation: slideDown 0.5s ease forwards;
            position: relative;
        }

        .popup-header {
            background: linear-gradient(135deg, #ff6b35, #f7931e);
            color: white;
            padding: 25px 30px;
            border-radius: 20px 20px 0 0;
            position: relative;
        }

        .popup-title {
            font-size: 28px;
            font-weight: 700;
            margin: 0;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .popup-subtitle {
            font-size: 14px;
            opacity: 0.9;
            margin-top: 5px;
        }

        .close-btn {
            position: absolute;
            top: 20px;
            right: 25px;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .close-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: rotate(90deg);
        }

        .popup-content {
            padding: 30px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
            transform: translateY(20px);
            opacity: 0;
            animation: slideUp 0.6s ease forwards;
        }

        .stat-card:nth-child(2) { animation-delay: 0.1s; }
        .stat-card:nth-child(3) { animation-delay: 0.2s; }
        .stat-card:nth-child(4) { animation-delay: 0.3s; }

        .stat-value {
            font-size: 32px;
            font-weight: 800;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 14px;
            opacity: 0.9;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .charts-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .chart-wrapper {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 1px solid #e0e0e0;
            transform: scale(0.8);
            opacity: 0;
            animation: scaleIn 0.8s ease forwards;
        }

        .chart-wrapper:nth-child(2) { animation-delay: 0.4s; }

        .chart-title {
            font-size: 18px;
            font-weight: 700;
            color: #333;
            margin-bottom: 20px;
            text-align: center;
        }

        .chart-container {
            position: relative;
            height: 300px;
        }

        .full-width-chart {
            grid-column: 1 / -1;
        }

        .payment-modes {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }

        .payment-mode {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            border: 2px solid transparent;
            transition: all 0.3s ease;
        }

        .payment-mode:hover {
            border-color: #ff6b35;
            transform: translateY(-2px);
        }

        .payment-icon {
            font-size: 24px;
            margin-bottom: 8px;
        }

        .payment-label {
            font-size: 12px;
            font-weight: 600;
            color: #666;
            text-transform: uppercase;
        }

        .payment-amount {
            font-size: 18px;
            font-weight: 800;
            color: #333;
            margin-top: 5px;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideDown {
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes slideUp {
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes scaleIn {
            to {
                transform: scale(1);
                opacity: 1;
            }
        }

        @media (max-width: 768px) {
            .charts-container {
                grid-template-columns: 1fr;
            }
            
            .popup-content {
                padding: 20px;
            }
            
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <button class="trigger-btn" onclick="openPopup()">ðŸ“Š Analytics</button>

    <div class="popup-overlay" id="popupOverlay">
        <div class="popup">
            <div class="popup-header">
                <h1 class="popup-title">ðŸ“ˆ Expense Analytics</h1>
                <p class="popup-subtitle">Comprehensive insights into your spending patterns</p>
                <button class="close-btn" onclick="closePopup()">Ã—</button>
            </div>
            
            <div class="popup-content">
                <!-- Stats Grid -->
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-value">â‚¹1,68,267</div>
                        <div class="stat-label">Total Expenses</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">13</div>
                        <div class="stat-label">Total Transactions</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">â‚¹12,944</div>
                        <div class="stat-label">Average Amount</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">â‚¹56,200</div>
                        <div class="stat-label">Highest Expense</div>
                    </div>
                </div>

                <!-- Charts -->
                <div class="charts-container">
                    <div class="chart-wrapper">
                        <h3 class="chart-title">Category-wise Expenses</h3>
                        <div class="chart-container">
                            <canvas id="categoryChart"></canvas>
                        </div>
                    </div>
                    
                    <div class="chart-wrapper">
                        <h3 class="chart-title">Monthly Trend</h3>
                        <div class="chart-container">
                            <canvas id="trendChart"></canvas>
                        </div>
                    </div>
                    
                    <div class="chart-wrapper full-width-chart">
                        <h3 class="chart-title">Payment Method Distribution</h3>
                        <div class="chart-container">
                            <canvas id="paymentChart"></canvas>
                        </div>
                        
                        <div class="payment-modes">
                            <div class="payment-mode">
                                <div class="payment-icon">ðŸ’°</div>
                                <div class="payment-label">Cash</div>
                                <div class="payment-amount">â‚¹1,13,500</div>
                            </div>
                            <div class="payment-mode">
                                <div class="payment-icon">ðŸ’³</div>
                                <div class="payment-label">Online</div>
                                <div class="payment-amount">â‚¹23,867</div>
                            </div>
                            <div class="payment-mode">
                                <div class="payment-icon">ðŸ’µ</div>
                                <div class="payment-label">Advance Pay</div>
                                <div class="payment-amount">â‚¹56,200</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Expense data from the image
        const expenseData = [
            { category: 'Normal Project', amount: 132200, mode: 'cash' },
            { category: 'Normal Project', amount: 56200, mode: 'Advance Pay' },
            { category: 'Misc Project', amount: 34000, mode: 'cash' },
            { category: 'Misc Project', amount: 8000, mode: 'online' },
            { category: 'online', amount: 7867, mode: 'online' },
            { category: 'online', amount: 500, mode: 'cash' },
            { category: 'N/A', amount: 2000, mode: 'cash' }
        ];

        let charts = {};

        function openPopup() {
            document.getElementById('popupOverlay').classList.add('active');
            setTimeout(() => {
                initializeCharts();
            }, 500);
        }

        function closePopup() {
            document.getElementById('popupOverlay').classList.remove('active');
            // Destroy charts to prevent memory leaks
            Object.values(charts).forEach(chart => {
                if (chart) chart.destroy();
            });
            charts = {};
        }

        function initializeCharts() {
            const colorPalette = {
                primary: ['#ff6b35', '#f7931e', '#667eea', '#764ba2'],
                secondary: ['rgba(255, 107, 53, 0.8)', 'rgba(247, 147, 30, 0.8)', 'rgba(102, 126, 234, 0.8)', 'rgba(118, 75, 162, 0.8)'],
                light: ['rgba(255, 107, 53, 0.2)', 'rgba(247, 147, 30, 0.2)', 'rgba(102, 126, 234, 0.2)', 'rgba(118, 75, 162, 0.2)']
            };

            // Category Chart
            const categoryData = expenseData.reduce((acc, item) => {
                acc[item.category] = (acc[item.category] || 0) + item.amount;
                return acc;
            }, {});

            charts.category = new Chart(document.getElementById('categoryChart'), {
                type: 'doughnut',
                data: {
                    labels: Object.keys(categoryData),
                    datasets: [{
                        data: Object.values(categoryData),
                        backgroundColor: colorPalette.secondary,
                        borderColor: colorPalette.primary,
                        borderWidth: 3,
                        hoverOffset: 10
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 20,
                                usePointStyle: true,
                                font: { size: 12, weight: '600' }
                            }
                        }
                    },
                    animation: {
                        animateRotate: true,
                        duration: 1500
                    }
                }
            });

            // Monthly Trend Chart (simulated data)
            charts.trend = new Chart(document.getElementById('trendChart'), {
                type: 'line',
                data: {
                    labels: ['Jul', 'Aug', 'Sep'],
                    datasets: [{
                        label: 'Monthly Expenses',
                        data: [2000, 35367, 130900],
                        borderColor: colorPalette.primary[0],
                        backgroundColor: colorPalette.light[0],
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        pointBackgroundColor: colorPalette.primary[0],
                        pointBorderColor: '#fff',
                        pointBorderWidth: 3,
                        pointRadius: 6
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: false }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: { color: 'rgba(0,0,0,0.1)' },
                            ticks: {
                                callback: function(value) {
                                    return 'â‚¹' + value.toLocaleString();
                                }
                            }
                        },
                        x: {
                            grid: { display: false }
                        }
                    },
                    animation: {
                        duration: 2000,
                        easing: 'easeInOutQuart'
                    }
                }
            });

            // Payment Method Chart
            const paymentData = expenseData.reduce((acc, item) => {
                acc[item.mode] = (acc[item.mode] || 0) + item.amount;
                return acc;
            }, {});

            charts.payment = new Chart(document.getElementById('paymentChart'), {
                type: 'bar',
                data: {
                    labels: Object.keys(paymentData),
                    datasets: [{
                        label: 'Amount (â‚¹)',
                        data: Object.values(paymentData),
                        backgroundColor: colorPalette.secondary,
                        borderColor: colorPalette.primary,
                        borderWidth: 2,
                        borderRadius: 8,
                        borderSkipped: false,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: false }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: { color: 'rgba(0,0,0,0.1)' },
                            ticks: {
                                callback: function(value) {
                                    return 'â‚¹' + value.toLocaleString();
                                }
                            }
                        },
                        x: {
                            grid: { display: false }
                        }
                    },
                    animation: {
                        duration: 1500,
                        easing: 'easeOutBounce'
                    }
                }
            });
        }

        // Close popup when clicking outside
        document.getElementById('popupOverlay').addEventListener('click', function(e) {
            if (e.target === this) {
                closePopup();
            }
        });

        // Close popup with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closePopup();
            }
        });
    </script>
</body>
</html>